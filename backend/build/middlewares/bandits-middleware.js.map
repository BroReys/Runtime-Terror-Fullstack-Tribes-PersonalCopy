{"version":3,"sources":["../../src/middlewares/bandits-middleware.js"],"names":["banditsMiddleware","res","req","next","UserService","findByUsername","aiRuler","getKingdoms","kingdoms","filter","kingdom","deletedAt","banditsKingdoms","name","startsWith","date","Date","setHours","killTime","Math","floor","i","length","now","coordinateX","coordinateY","save","banditsUtil","destroyBandits","id","reloadedKingdoms","KingdomService","getFirstPlayer","firstPlayer","timeDiff","registeredAt","maxDays","createBandits"],"mappings":"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","sourcesContent":["import UserService from \"../services/user-service\";\nimport banditsUtil from '../utilities/bandits'\nimport KingdomService from \"../services/kingdom-service\";\nimport {aiRules} from \"../rules/ai-rules\";\n\nconst banditsMiddleware = async (res, req, next) => {\n  let aiRuler = await UserService.findByUsername('AI-ruler');\n  let kingdoms = await aiRuler.getKingdoms();\n  kingdoms = kingdoms.filter(kingdom => kingdom.deletedAt === null);\n  let banditsKingdoms = kingdoms.filter(\n      kingdom => kingdom.name.startsWith('Bandits'));\n  let date = new Date(new Date().setHours(23, 59, 0, 0));\n  let killTime = Math.floor(date / 1000);\n\n  if (banditsKingdoms) {\n    for (let i = 0; i < banditsKingdoms.length; i++) {\n      if (Date.now() / 1000 >= killTime) {\n        banditsKingdoms[i].deletedAt = Date.now() / 1000;\n        banditsKingdoms[i].coordinateX = null;\n        banditsKingdoms[i].coordinateY = null;\n        await banditsKingdoms[i].save();\n        await banditsUtil.destroyBandits(banditsKingdoms[i].id);\n      }\n    }\n  }\n  let reloadedKingdoms = await aiRuler.getKingdoms();\n  reloadedKingdoms = reloadedKingdoms.filter(kingdom => kingdom.deletedAt === null);\n  reloadedKingdoms = reloadedKingdoms.filter(kingdom => kingdom.name.startsWith('Bandits'));\n\n  if (reloadedKingdoms.length === 0) {\n    let firstPlayer = await KingdomService.getFirstPlayer();\n    let timeDiff = Math.floor(\n        (Math.floor(Date.now() / 1000) - firstPlayer.registeredAt) / 86400);\n    timeDiff = timeDiff > aiRules().maxDays ? aiRules().maxDays : timeDiff;\n    await banditsUtil.createBandits(timeDiff)\n  }\n\n  next();\n};\n\nexport default banditsMiddleware;\n"],"file":"bandits-middleware.js"}