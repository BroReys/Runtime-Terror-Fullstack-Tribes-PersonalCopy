{"version":3,"sources":["../../src/middlewares/winner-middleware.js"],"names":["winner_middleware","req","res","next","gameOver","KingdomService","getKingdomsCount","total_kingdoms","getWinnerStats","game_stats","current_ratio","count","winning_rules","ratio","UserService","findById","userId","winner","username","getFirstPlayer","first_player","registration_length","Math","floor","Date","now","user","registeredAt","registration_window","send","status"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,iBAAiB;AAAA,2FAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,QADoB,GACT,KADS;AAAA;AAAA,mBAIGC,2BAAeC,gBAAf,EAJH;;AAAA;AAIpBC,YAAAA,cAJoB;AAAA;AAAA,mBASDF,2BAAeG,cAAf,EATC;;AAAA;AASpBC,YAAAA,UAToB;AAUpBC,YAAAA,aAVoB,GAUJD,UAAU,CAACE,KAAX,GAAmBJ,cAVf;;AAAA,kBAYpBG,aAAa,GAAG,oBAAQE,aAAR,CAAsBC,KAZlB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAcPC,wBAAYC,QAAZ,CAAqBN,UAAU,CAACO,MAAhC,CAdO;;AAAA;AActBC,YAAAA,MAdsB;;AAAA,kBAenBA,MAAM,CAACC,QAAP,KAAoB,UAfD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBKb,2BAAec,cAAf,EAhBL;;AAAA;AAgBhBC,YAAAA,YAhBgB;AAiBhBC,YAAAA,mBAjBgB,GAiBMC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,IACpBL,YAAY,CAACM,IAAb,CAAkBC,YAlBJ;;AAoBpB,gBAAIN,mBAAmB,GAAG,oBAAQT,aAAR,CAAsBgB,mBAAhD,EAAqE;AACnExB,cAAAA,QAAQ,GAAG,IAAX;AACD;;AAtBmB;AA0BxB;AACA,gBAAIA,QAAJ,EAAc;AACZF,cAAAA,GAAG,CAAC2B,IAAJ,CAAS;AAACC,gBAAAA,MAAM,EAAE,2BAA2Bb,MAAM,CAACC;AAA3C,eAAT;AACD,aAFD,MAEO;AACLf,cAAAA,IAAI;AACL;;AA/BuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBH,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;eAmCeA,iB","sourcesContent":["import KingdomService from \"../services/kingdom-service\";\nimport UserService from \"../services/user-service\";\nimport {rules} from \"../rules/rules\";\n\nconst winner_middleware = async (req, res, next) => {\n  let gameOver = false;\n  let winner;\n\n  let total_kingdoms = await KingdomService.getKingdomsCount();\n\n  //Game is over when one ruler owns more than {rules}/ratio % of kingdoms.\n  //And when first player started before more than {rules}/registration_window seconds (days)\n\n  let game_stats = await KingdomService.getWinnerStats();\n  let current_ratio = game_stats.count / total_kingdoms;\n\n  if (current_ratio > rules().winning_rules.ratio) {\n\n    winner = await UserService.findById(game_stats.userId);\n    if(winner.username !== \"AI-ruler\"){\n      let first_player = await KingdomService.getFirstPlayer();\n      let registration_length = Math.floor(Date.now() / 1000)\n          - first_player.user.registeredAt;\n\n      if (registration_length > rules().winning_rules.registration_window) {\n        gameOver = true;\n      }\n    }\n  }\n\n  //If game is over, send info to user, otherwise continue to endpoint\n  if (gameOver) {\n    res.send({status: \"Game over! Winner is: \" + winner.username});\n  } else {\n    next();\n  }\n\n}\n\nexport default winner_middleware;"],"file":"winner-middleware.js"}