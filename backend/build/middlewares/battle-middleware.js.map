{"version":3,"sources":["../../src/middlewares/battle-middleware.js"],"names":["battleMiddleware","req","res","next","BattleService","findAllFinished","finishedBattles","findAllUnfinished","unfinishedBattles","startBattle","returnTroopsToKingdom","battles","i","length","currentTime","Math","floor","Date","now","timeDiff","timeOfArrival","getAttackingKingdom","attackingKingdom","getDefendingKingdom","defendingKingdom","resourcesService","updateResourcesByKingdomId","id","isFinished","save","areTroopsStillInBattle","timeOfComeback","battle","getAttackerTroopsToBattle","troopsInBattle","j","quantity"],"mappings":"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","sourcesContent":["import BattleService from \"../services/battle-service\";\nimport resourcesService from \"../services/resources-service\";\n\nconst battleMiddleware = async (req, res, next) => {\n  let finishedBattles = await BattleService.findAllFinished();\n  let unfinishedBattles = await BattleService.findAllUnfinished();\n\n  await startBattle(unfinishedBattles);\n  await returnTroopsToKingdom(finishedBattles);\n  next();\n};\n\nconst startBattle = async (battles) => {\n  if (battles) {\n    for (let i = 0; i < battles.length; i++) {\n\n      let currentTime = Math.floor(Date.now() / 1000);\n\n      let timeDiff = Math.floor(\n          battles[i].timeOfArrival - currentTime);\n\n      if (timeDiff > 0) {\n        continue;\n      }\n      let attackingKingdom = await battles[i].getAttackingKingdom();\n      let defendingKingdom = await battles[i].getDefendingKingdom();\n\n      try {\n        await resourcesService.updateResourcesByKingdomId(attackingKingdom.id);\n        await resourcesService.updateResourcesByKingdomId(defendingKingdom.id);\n        await BattleService.startBattle(battles[i]);\n\n      } catch (e) {\n        battles[i].isFinished = true;\n\n        try {\n          await BattleService.returnTroopsToKingdom(battles[i]);\n        } catch (ignoredException) {}\n\n        await battles[i].save();\n      }\n    }\n  }\n};\n\nconst returnTroopsToKingdom = async (battles) => {\n  if (battles) {\n    for (let i = 0; i < battles.length; i++) {\n\n      if (!(await areTroopsStillInBattle(battles[i]))) {\n        continue\n      }\n      let currentTime = Math.floor(Date.now() / 1000);\n\n      let timeDiff = Math.floor(\n          battles[i].timeOfComeback - currentTime);\n\n      if (timeDiff > 0) {\n        continue;\n      }\n      await BattleService.returnTroopsToKingdom(battles[i]);\n    }\n  }\n};\n\nconst areTroopsStillInBattle = async (battle) => {\n\n  let areTroopsStillInBattle = false;\n  try {\n    let troopsInBattle = await battle.getAttackerTroopsToBattle();\n    if (troopsInBattle.length > 0) {\n      for (let j = 0; j < troopsInBattle.length; j++) {\n        if (troopsInBattle[j].quantity > 0) {\n          areTroopsStillInBattle = true;\n          return areTroopsStillInBattle;\n        }\n      }\n    }\n  } catch (e) {\n    areTroopsStillInBattle = false;\n  }\n  return areTroopsStillInBattle;\n};\n\nexport default battleMiddleware;\n"],"file":"battle-middleware.js"}