{"version":3,"sources":["../../src/models/map.js"],"names":["get","Kingdom","findAll","attributes","Sequelize","col","raw","nest","include","model","User","required"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,GAAG;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKC,oBAAQC,OAAR,CAAgB;AACzBC,cAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,aAAT,EAAwB,aAAxB,EAAuC,CAACC,qBAAUC,GAAV,CAAc,eAAd,CAAD,EAAiC,UAAjC,CAAvC,CADa;AAEzBC,cAAAA,GAAG,EAAE,IAFoB;AAGzBC,cAAAA,IAAI,EAAE,IAHmB;AAIzBC,cAAAA,OAAO,EAAE,CACL;AACIC,gBAAAA,KAAK,EAAEC,gBADX;AAEIC,gBAAAA,QAAQ,EAAE,IAFd;AAGIR,gBAAAA,UAAU,EAAE;AAHhB,eADK;AAJgB,aAAhB,CADL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAHH,GAAG;AAAA;AAAA;AAAA,GAAT;;eAee;AACXA,EAAAA,GAAG,EAAHA;AADW,C","sourcesContent":["import Kingdom from \"./kingdom\";\nimport User from \"./user\";\nimport {Sequelize} from \"sequelize\";\n\nconst get = async () => {\n    return await Kingdom.findAll({\n        attributes: [\"name\", \"coordinateX\", \"coordinateY\", [Sequelize.col(\"user.username\"), \"username\"]],\n        raw: true,\n        nest: true,\n        include: [\n            {\n                model: User,\n                required: true,\n                attributes: []\n            }\n        ],\n    });\n};\n\nexport default {\n    get\n}"],"file":"map.js"}