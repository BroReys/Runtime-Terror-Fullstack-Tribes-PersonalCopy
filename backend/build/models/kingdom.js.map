{"version":3,"sources":["../../src/models/kingdom.js"],"names":["Kingdom","sequelize","define","id","type","Sequelize","INTEGER","autoIncrement","allowNull","primaryKey","unique","name","STRING","coordinateX","coordinateY","gold","min","defaultValue","food","goldProduction","foodProduction","lastTick","DOUBLE","loyalty","max","createdAt","Math","floor","Date","now","deletedAt","hooks","beforeCreate","record"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,OAAO,GAAGC,qBAAUC,MAAV,CAAiB,SAAjB,EAA4B;AAC1C;AACIC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,sBAAUC,OADd;AAEFC,IAAAA,aAAa,EAAE,IAFb;AAGFC,IAAAA,SAAS,EAAE,KAHT;AAIFC,IAAAA,UAAU,EAAE,IAJV;AAKFC,IAAAA,MAAM,EAAE;AALN,GAFkC;AAStCC,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAEC,sBAAUO,MADZ;AAEJJ,IAAAA,SAAS,EAAE;AAFP,GATgC;AAatCK,EAAAA,WAAW,EAAE;AACXT,IAAAA,IAAI,EAAEC,sBAAUC,OADL;AAEXE,IAAAA,SAAS,EAAE;AAFA,GAbyB;AAiBtCM,EAAAA,WAAW,EAAE;AACXV,IAAAA,IAAI,EAAEC,sBAAUC,OADL;AAEXE,IAAAA,SAAS,EAAE;AAFA,GAjByB;AAqBtCO,EAAAA,IAAI,EAAE;AACJX,IAAAA,IAAI,EAAEC,sBAAUC,OADZ;AAEJE,IAAAA,SAAS,EAAE,KAFP;AAGJQ,IAAAA,GAAG,EAAE,CAHD;AAIJC,IAAAA,YAAY,EAAE;AAJV,GArBgC;AA2BtCC,EAAAA,IAAI,EAAE;AACJd,IAAAA,IAAI,EAAEC,sBAAUC,OADZ;AAEJE,IAAAA,SAAS,EAAE,KAFP;AAGJQ,IAAAA,GAAG,EAAE,CAHD;AAIJC,IAAAA,YAAY,EAAE;AAJV,GA3BgC;AAiCtCE,EAAAA,cAAc,EAAE;AACdf,IAAAA,IAAI,EAAEC,sBAAUC,OADF;AAEdE,IAAAA,SAAS,EAAE,KAFG;AAGdQ,IAAAA,GAAG,EAAE,CAHS;AAIdC,IAAAA,YAAY,EAAE;AAJA,GAjCsB;AAuCtCG,EAAAA,cAAc,EAAE;AACdhB,IAAAA,IAAI,EAAEC,sBAAUC,OADF;AAEdE,IAAAA,SAAS,EAAE,KAFG;AAGdQ,IAAAA,GAAG,EAAE,CAHS;AAIdC,IAAAA,YAAY,EAAE;AAJA,GAvCsB;AA6CtCI,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,IAAI,EAAEC,sBAAUiB;AADR,GA7C4B;AAgDtCC,EAAAA,OAAO,EAAE;AACPnB,IAAAA,IAAI,EAAEC,sBAAUC,OADT;AAEPW,IAAAA,YAAY,EAAE,GAFP;AAGPD,IAAAA,GAAG,EAAE,CAHE;AAIPQ,IAAAA,GAAG,EAAE;AAJE,GAhD6B;AAsDtCC,EAAAA,SAAS,EAAE;AACTrB,IAAAA,IAAI,EAAEC,sBAAUiB,MADP;AAETL,IAAAA,YAAY,EAAES,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB;AAFL,GAtD2B;AA0DtCC,EAAAA,SAAS,EAAE;AACT1B,IAAAA,IAAI,EAAEC,sBAAUiB,MADP;AAETL,IAAAA,YAAY,EAAE,IAFL;AAGTT,IAAAA,SAAS,EAAE;AAHF;AA1D2B,CAA5B,EA+DT;AACDuB,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE,sBAACC,MAAD,EAAY;AACxBA,MAAAA,MAAM,CAACZ,QAAP,GAAkBK,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,CAAlB;AACD;AAHI;AADN,CA/DS,CAAhB;;eAwEe7B,O","sourcesContent":["import Sequelize from \"sequelize\";\nimport sequelize from \"../config/database\";\n\nconst Kingdom = sequelize.define('kingdom', {\n  //TODO DEFAULT VALUES FOR RESOURCES\n      id: {\n        type: Sequelize.INTEGER,\n        autoIncrement: true,\n        allowNull: false,\n        primaryKey: true,\n        unique: true\n      },\n      name: {\n        type: Sequelize.STRING,\n        allowNull: false\n      },\n      coordinateX: {\n        type: Sequelize.INTEGER,\n        allowNull: true\n      },\n      coordinateY: {\n        type: Sequelize.INTEGER,\n        allowNull: true\n      },\n      gold: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n        min: 0,\n        defaultValue: 0\n      },\n      food: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n        min: 0,\n        defaultValue: 0\n      },\n      goldProduction: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n        min: 0,\n        defaultValue: 0\n      },\n      foodProduction: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n        min: 0,\n        defaultValue: 0\n      },\n      lastTick: {\n        type: Sequelize.DOUBLE\n      },\n      loyalty: {\n        type: Sequelize.INTEGER,\n        defaultValue: 100,\n        min: 0,\n        max: 100\n      },\n      createdAt: {\n        type: Sequelize.DOUBLE,\n        defaultValue: Math.floor(Date.now() / 1000)\n      },\n      deletedAt: {\n        type: Sequelize.DOUBLE,\n        defaultValue: null,\n        allowNull: true\n      }\n    }, {\n      hooks: {\n        beforeCreate: (record) => {\n          record.lastTick = Math.floor(Date.now() / 1000);\n        }\n      }\n    }\n);\n\nexport default Kingdom;\n"],"file":"kingdom.js"}