{"version":3,"sources":["../../src/services/settle-service.js"],"names":["initiatePilgrimageToSettleKingdom","settlerRuler","settlerKingdom","coordinateX","coordinateY","troops","getSpeedOfSettlers","speedOfSettlers","timeOfTravel","calculateDistance","getTroops","troopsOfKingdom","settlers","filter","troop","type","timeOfArrival","Math","floor","Date","now","quantityInBattle","quantity","save","settler","getUnitLevel","unitLevel","speed","upgradeLevel","x1","y1","x2","y2","round","sqrt","pow","findArrivedSettlers","TroopsRepository","findReturnedSettlers","setPropertiesOfReturnedSettlers","returnedSettlers","i","length","timeOfComeback","tileCheckOfArrivedSettlers","arrivedSettlers","MapService","identifyKingdom","tile","status","setTimeOfComeBack","createKingdomFromSettlers","KingdomRepository","findKingdomById","kingdomId","originKingdom","UserRepository","findById","userId","user","getKingdoms","userKingdoms","romanNum","romanizer","kingdomName","username","kingdomFromSettlers","name","id","createKingdom","kingdomSavedFromSettlers","UnitLevelService","generateBasicUnitLevels","BuildingService","generateStarterBuildings","num","lookup","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","roman"],"mappings":"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","sourcesContent":["import {troopRules} from \"../rules/troops-rules\";\nimport TroopsRepository\n  from \"../repositories/troops-repositories/troops-repository\";\nimport MapService from \"./map-service\";\nimport KingdomRepository from \"../repositories/kingdom-repository\";\nimport UserRepository from \"../repositories/user-repository\";\nimport UnitLevelService from \"./unit-level-service\";\nimport BuildingService from \"./building-service\";\n\nconst initiatePilgrimageToSettleKingdom = async (settlerRuler, settlerKingdom,\n    coordinateX,\n    coordinateY, troops) => {\n\n  let speedOfSettlers = await getSpeedOfSettlers(settlerKingdom)\n  let timeOfTravel = calculateDistance(settlerKingdom, coordinateX, coordinateY\n  ) / speedOfSettlers;\n  let troopsOfKingdom = await settlerKingdom.getTroops();\n  let settlers = troopsOfKingdom.filter(troop => troop.type === 'settlers');\n\n  settlers[0].timeOfArrival = Math.floor(\n      Date.now() / 1000 + timeOfTravel * 60 * 60);\n  settlers[0].quantityInBattle = settlers[0].quantityInBattle\n      + troops[0].quantity;\n  settlers[0].quantity = settlers[0].quantity - troops[0].quantity;\n  settlers[0].coordinateX = coordinateX;\n  settlers[0].coordinateY = coordinateY;\n\n  await settlers[0].save();\n\n  return settlers[0];\n}\n\nasync function getSpeedOfSettlers(settlerKingdom) {\n  let troops = await settlerKingdom.getTroops();\n  let settler = await troops.filter(troop => troop.type === 'settlers');\n  let unitLevel = await settler[0].getUnitLevel();\n\n  let speed = troopRules(unitLevel.upgradeLevel).settlers.speed;\n  return speed;\n}\n\nfunction calculateDistance(settlerKingdom, coordinateX, coordinateY) {\n  let x1 = settlerKingdom.coordinateX;\n  let y1 = settlerKingdom.coordinateY;\n  let x2 = coordinateX;\n  let y2 = coordinateY;\n\n  return Math.round(Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)));\n}\n\nconst findArrivedSettlers = async () => {\n  return await TroopsRepository.findArrivedSettlers();\n}\n\nconst findReturnedSettlers = async () => {\n  return await TroopsRepository.findReturnedSettlers();\n}\n\nconst setPropertiesOfReturnedSettlers = async (returnedSettlers) => {\n\n  for (let i = 0; i < returnedSettlers.length; i++) {\n    returnedSettlers[i].quantity = returnedSettlers[i].quantity\n        + returnedSettlers[i].quantityInBattle;\n    returnedSettlers[i].quantityInBattle = returnedSettlers[i].quantityInBattle\n        - returnedSettlers[i].quantityInBattle;\n    returnedSettlers[i].coordinateX = null;\n    returnedSettlers[i].coordinateY = null;\n    returnedSettlers[i].timeOfComeback = null;\n    returnedSettlers[i].save();\n  }\n}\n\nconst tileCheckOfArrivedSettlers = async (arrivedSettlers) => {\n\n  for (let i = 0; i < arrivedSettlers.length; i++) {\n    let tile = (await MapService.identifyKingdom(\n        arrivedSettlers[i].coordinateX,\n        arrivedSettlers[i].coordinateY));\n\n    if (tile.status !== 'free') {\n      await setTimeOfComeBack(arrivedSettlers[i]);\n    } else {\n      await createKingdomFromSettlers(arrivedSettlers[i]);\n    }\n  }\n\n}\n\nasync function setTimeOfComeBack(settlers) {\n  let settlerKingdom = await KingdomRepository.findKingdomById(\n      settlers.kingdomId);\n  let speedOfSettlers = await getSpeedOfSettlers(settlerKingdom);\n  let timeOfTravel = calculateDistance(settlerKingdom, settlers.coordinateX,\n      settlers.coordinateY\n  ) / speedOfSettlers;\n\n  settlers.timeOfComeback = Math.floor(Date.now() / 1000 + timeOfTravel);\n  settlers.timeOfArrival = null;\n  await settlers.save();\n}\n\nasync function createKingdomFromSettlers(settlers) {\n  const originKingdom = await KingdomRepository.findKingdomById(\n      settlers.kingdomId);\n  const user = await UserRepository.findById(originKingdom.userId);\n  const userKingdoms = await user.getKingdoms();\n  const romanNum = romanizer(userKingdoms.length);\n  const kingdomName = `${user.username}’s kingdom ${romanNum}`;\n\n  let kingdomFromSettlers = {\n    name: kingdomName,\n    coordinateX: settlers.coordinateX,\n    coordinateY: settlers.coordinateY,\n    userId: user.id,\n  };\n\n  const kingdomSavedFromSettlers = await KingdomRepository.createKingdom(\n      kingdomFromSettlers);\n  await UnitLevelService.generateBasicUnitLevels(kingdomSavedFromSettlers.id);\n  //todo generate basic buildings\n  await BuildingService.generateStarterBuildings(kingdomSavedFromSettlers.id)\n\n  settlers.quantityInBattle = settlers.quantityInBattle\n      - settlers.quantityInBattle;\n  settlers.timeOfArrival = null;\n  settlers.coordinateX = null;\n  settlers.coordinateY = null;\n  settlers.save();\n}\n\nfunction romanizer(num) {\n  let lookup = {\n    M: 1000,\n    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n    XL: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1\n  }, roman = '', i;\n  for (i in lookup) {\n    while (num >= lookup[i]) {\n      roman += i;\n      num -= lookup[i];\n    }\n  }\n  return roman;\n}\n\nexport default {\n  initiatePilgrimageToSettleKingdom,\n  findArrivedSettlers,\n  tileCheckOfArrivedSettlers,\n  setPropertiesOfReturnedSettlers,\n  findReturnedSettlers\n}"],"file":"settle-service.js"}