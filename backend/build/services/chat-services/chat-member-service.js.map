{"version":3,"sources":["../../../src/services/chat-services/chat-member-service.js"],"names":["createChatMember","chat","user","ChatMemberRepository","createMultipleMembers","members","addedMembers","notAddedMembers","Array","isArray","i","length","UserService","findByUsername","doMembersAlreadyExists","username","filter","element","findByChatIdAndUserId","chatMember","undefined","isAlreadyMember"],"mappings":"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","sourcesContent":["import ChatMemberRepository\n  from \"../../repositories/chat-repositories/chat-member-repository\";\nimport UserService from \"../user-service\";\n\nconst createChatMember = async (chat, user) => {\n  await ChatMemberRepository.createChatMember(chat, user);\n};\n\nconst createMultipleMembers = async (chat, members) => {\n  let addedMembers = [];\n  let notAddedMembers = [];\n\n  if (Array.isArray(members)) {\n    for (let i = 0; i < members.length; i++) { // add listed members as members of the chat\n\n      let user = await UserService.findByUsername(members[i]);\n      if (user != null && (await doMembersAlreadyExists(chat, user.username)\n          === false)) {\n        await ChatMemberRepository.createChatMember(chat, user);\n        addedMembers[i] = user.username;\n      } else {\n        notAddedMembers[i] = members[i];\n      }\n    }\n  } else {\n    let user = await UserService.findByUsername(members);\n    if (user != null && await doMembersAlreadyExists(chat, members) === false) {\n      await createChatMember(chat, user);\n      addedMembers[0] = user.username;\n    } else {\n      notAddedMembers[0] = members[0];\n    }\n  }\n  return {\n    addedMembers: addedMembers.filter(element => {\n      return element != null;\n    }),\n    notAddedMembers: notAddedMembers.filter(element => {\n      return element != null;\n    })\n  };\n};\n\nconst doMembersAlreadyExists = async (chat, members) => {\n  let isAlreadyMember;\n\n  if (Array.isArray(members)) {\n    for (let i = 0; i < members.length; i++) { //\n      let user = await UserService.findByUsername(members[i]);\n      if (user != null) {\n        let chatMember = await ChatMemberRepository.findByChatIdAndUserId(chat,\n            user);\n        if (chatMember == null || chatMember === undefined) {\n          return false;\n        } else {\n          isAlreadyMember = true;\n        }\n      }\n    }\n  } else {\n    let user = await UserService.findByUsername(members);\n    if (user != null) {\n      let chatMember = await ChatMemberRepository.findByChatIdAndUserId(chat,\n          user);\n      if (chatMember == null || chatMember == undefined) {\n        return false;\n      } else {\n        isAlreadyMember = true;\n      }\n    }\n  }\n  return isAlreadyMember;\n};\n\nexport default {\n  createChatMember,\n  createMultipleMembers,\n  doMembersAlreadyExists\n};\n"],"file":"chat-member-service.js"}