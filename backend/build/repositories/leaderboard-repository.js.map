{"version":3,"sources":["../../src/repositories/leaderboard-repository.js"],"names":["getKingdomsBuildingPoints","UserService","findByUsername","user","Building","findAll","include","model","Kingdom","as","where","Op","not","id","attributes","sequelize","fn","col","group","raw","order","literal","getRulerBuildingPoints"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,yBAAyB;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACfC,wBAAYC,cAAZ,CAA2B,UAA3B,CADe;;AAAA;AAC5BC,YAAAA,IAD4B;AAAA,6CAEzBC,qBAASC,OAAT,CAAiB;AACtBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,KAAK,EAAEC,mBADA;AACSC,gBAAAA,EAAE,EAAE,WADb;AAEPC,gBAAAA,KAAK,EAAE;AAAC,iEAAYC,cAAGC,GAAf,EAAqBT,IAAI,CAACU,EAA1B;AAAD,iBAFA;AAGPC,gBAAAA,UAAU,EAAE;AAHL,eADa;AAMtBA,cAAAA,UAAU,EAAE,CAAC,WAAD,EACV,CAACC,qBAAUC,EAAV,CAAa,KAAb,EAAoBD,qBAAUE,GAAV,SAApB,CAAD,EAA8C,OAA9C,CADU,CANU;AAStBC,cAAAA,KAAK,EAAE,CAAC,WAAD,CATe;AAUtBC,cAAAA,GAAG,EAAE,IAViB;AAWtBC,cAAAA,KAAK,EAAEL,qBAAUM,OAAV,CAAkB,YAAlB;AAXe,aAAjB,CAFyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAzBrB,yBAAyB;AAAA;AAAA;AAAA,GAA/B;;AAiBA,IAAMsB,sBAAsB;AAAA,4FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZrB,wBAAYC,cAAZ,CAA2B,UAA3B,CADY;;AAAA;AACzBC,YAAAA,IADyB;AAAA,8CAEtBC,qBAASC,OAAT,CAAiB;AACtBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,KAAK,EAAEC,mBADA;AACSC,gBAAAA,EAAE,EAAE,WADb;AAEPC,gBAAAA,KAAK,EAAE;AAAC,iEAAYC,cAAGC,GAAf,EAAqBT,IAAI,CAACU,EAA1B;AAAD,iBAFA;AAGPC,gBAAAA,UAAU,EAAE;AAHL,eADa;AAMtBA,cAAAA,UAAU,EAAE,CAAC,WAAD,EAAa,kBAAb,EACV,CAACC,qBAAUC,EAAV,CAAa,KAAb,EAAoBD,qBAAUE,GAAV,SAApB,CAAD,EAA8C,OAA9C,CADU,CANU;AAStBC,cAAAA,KAAK,EAAE,CAAC,QAAD,CATe;AAUtBC,cAAAA,GAAG,EAAE,IAViB;AAWtBC,cAAAA,KAAK,EAAEL,qBAAUM,OAAV,CAAkB,YAAlB;AAXe,aAAjB,CAFsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBC,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;eAiBe;AAACtB,EAAAA,yBAAyB,EAAzBA,yBAAD;AAA4BsB,EAAAA,sBAAsB,EAAtBA;AAA5B,C","sourcesContent":["import Building from \"../models/building\";\nimport sequelize from \"../config/database\";\nimport Kingdom from \"../models/kingdom\";\nimport {Op} from \"sequelize\";\nimport UserService from \"../services/user-service\";\n\nconst getKingdomsBuildingPoints = async () => {\n  let user = await UserService.findByUsername('AI-ruler');\n  return Building.findAll({\n    include: {\n      model: Kingdom, as: 'buildings',\n      where: {'userId': {[Op.not]: user.id}},\n      attributes: [],\n    },\n    attributes: ['kingdomId',\n      [sequelize.fn('sum', sequelize.col(`level`)), 'total'],\n    ],\n    group: ['kingdomId'],\n    raw: true,\n    order: sequelize.literal('total DESC')\n  });\n};\n\nconst getRulerBuildingPoints = async () => {\n  let user = await UserService.findByUsername('AI-ruler');\n  return Building.findAll({\n    include: {\n      model: Kingdom, as: 'buildings',\n      where: {'userId': {[Op.not]: user.id}},\n      attributes: [],\n    },\n    attributes: ['kingdomId','buildings.userId',\n      [sequelize.fn('sum', sequelize.col(`level`)), 'total'],\n    ],\n    group: ['userId'],\n    raw: true,\n    order: sequelize.literal('total DESC')\n  })\n};\n\nexport default {getKingdomsBuildingPoints, getRulerBuildingPoints};\n"],"file":"leaderboard-repository.js"}