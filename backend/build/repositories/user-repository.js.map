{"version":3,"sources":["../../src/repositories/user-repository.js"],"names":["createUser","possibleUser","User","create","user","findUserByEmailOrUsername","username","email","findOne","where","Op","or","findUserByToken","token","registrationToken","forgottenPasswordToken","updateUser","update","id","save","findUserByUsername","findById","findUserByEmail"],"mappings":"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","sourcesContent":["import User from '../models/user';\nimport {Op} from 'sequelize';\n\nconst createUser = async (possibleUser) => {\n  const user = await User.create(possibleUser);\n  return user;\n}\n\nconst findUserByEmailOrUsername = async (username, email) => {\n  const user = await User.findOne({\n    where: {\n      [Op.or]: [\n        {username: username},\n        {email: email}\n      ]\n    }\n  })\n  return user;\n}\n\nconst findUserByToken = async (token) => {\n  if (token !== null) {\n    const user = await User.findOne({\n      where: {\n        [Op.or]: [\n          {registrationToken: token},\n          {forgottenPasswordToken: token}\n        ]\n      }\n    })\n    return user\n  } else {\n    return null;\n  }\n}\n\nconst updateUser = async (user) => {\n  await User.update(user, {\n    where: {\n      id: user.id\n    }\n  });\n  await user.save();\n}\n\nconst findUserByUsername = async (username) => {\n  const user = await User.findOne({\n    where: {\n      username: username\n    }\n  });\n  return user;\n};\n\nconst findById = async (id) => {\n  return await User.findOne({\n    where: {\n      id: id\n    }\n  });\n};\n\nconst findUserByEmail = async (email) => {\n  return await User.findOne({\n    where: {\n      email: email\n    }\n  });\n};\n\nexport default {\n  createUser,\n  findUserByEmailOrUsername,\n  findUserByToken,\n  updateUser,\n  findUserByUsername,\n  findById,\n  findUserByEmail\n};\n"],"file":"user-repository.js"}