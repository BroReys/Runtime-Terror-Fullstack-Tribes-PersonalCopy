{"version":3,"sources":["../../src/controllers/message-controller.js"],"names":["addMessage","req","res","textOfMessage","body","text","chatId","params","id","ChatService","findById","chat","UserService","user","author","status","json","undefined","ChatMemberService","doMembersAlreadyExists","username","MessageService","createMessage","sendStatus"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,UAAU;AAAA,2FAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,aADa,GACGF,GAAG,CAACG,IAAJ,CAASC,IADZ;AAEbC,YAAAA,MAFa,GAEJL,GAAG,CAACM,MAAJ,CAAWC,EAFP;AAAA;AAAA,mBAGAC,wBAAYC,QAAZ,CAAqBJ,MAArB,CAHA;;AAAA;AAGbK,YAAAA,IAHa;AAAA;AAAA,mBAIEC,wBAAYF,QAAZ,CAAqBT,GAAG,CAACY,IAAJ,CAASL,EAA9B,CAJF;;AAAA;AAIbM,YAAAA,MAJa;;AAAA,kBAMbA,MAAM,KAAK,IANE;AAAA;AAAA;AAAA;;AAOfZ,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAAqB,iBAArB,CAArB;AAPe;AAAA;;AAAA;AAAA,kBASNV,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKW,SATxB;AAAA;AAAA;AAAA;;AAUff,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAAqB,qBAArB,CAArB;AAVe;AAAA;;AAAA;AAAA,kBAYNL,IAAI,KAAK,IAZH;AAAA;AAAA;AAAA;;AAafT,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAAqB,iBAArB,CAArB;AAbe;AAAA;;AAAA;AAAA;AAAA,mBAeAE,8BAAkBC,sBAAlB,CAAyCR,IAAzC,EACTG,MAAM,CAACM,QADE,CAfA;;AAAA;AAAA;;AAAA,kCAiBT,KAjBS;AAAA;AAAA;AAAA;;AAkBflB,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI,8BAAqB,2CAArB,CADJ;AAlBe;AAAA;;AAAA;AAAA,kBAqBNb,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAKc,SArBtC;AAAA;AAAA;AAAA;;AAsBff,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAAqB,uBAArB,CAArB;AAtBe;AAAA;;AAAA;AAAA;AAAA,mBAyBTK,2BAAeC,aAAf,CAA6BnB,aAA7B,EAA4CQ,IAA5C,EAAkDG,MAAlD,CAzBS;;AAAA;AA0BfZ,YAAAA,GAAG,CAACqB,UAAJ,CAAe,GAAf;;AA1Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVvB,UAAU;AAAA;AAAA;AAAA,GAAhB;;eA8Be;AACbA,EAAAA,UAAU,EAAVA;AADa,C","sourcesContent":["import MessageService from \"../services/chat-services/message-service\";\nimport generateErrorMessage from \"../utilities/error-message\";\nimport ChatService from \"../services/chat-services/chat-service\";\nimport ChatMemberService from \"../services/chat-services/chat-member-service\";\nimport UserService from \"../services/user-service\";\n\nconst addMessage = async (req, res) => {\n  let textOfMessage = req.body.text;\n  let chatId = req.params.id;\n  let chat = await ChatService.findById(chatId);\n  let author = await UserService.findById(req.user.id);\n\n  if (author === null) {\n    res.status(404).json(generateErrorMessage('User not found!'));\n\n  } else if (chatId === null || chatId === undefined) {\n    res.status(400).json(generateErrorMessage('Chat ID is missing!'));\n\n  } else if (chat === null) {\n    res.status(404).json(generateErrorMessage('Chat not found!'));\n\n  } else if (await ChatMemberService.doMembersAlreadyExists(chat,\n          author.username)\n      === false) {\n    res.status(403).json(\n        generateErrorMessage('Only member of the chat can add messages!'));\n\n  } else if (textOfMessage === null || textOfMessage === undefined) {\n    res.status(400).json(generateErrorMessage('Text cannot be empty!'));\n\n  } else {\n    await MessageService.createMessage(textOfMessage, chat, author);\n    res.sendStatus(200);\n  }\n};\n\nexport default {\n  addMessage\n};\n\n"],"file":"message-controller.js"}