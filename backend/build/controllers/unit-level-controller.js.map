{"version":3,"sources":["../../src/controllers/unit-level-controller.js"],"names":["upgradeTroop","req","res","type","body","kingdomId","params","id","user","UnitLevelService","upgradeUnitLevel","status","json","error","success"],"mappings":";;;;;;;;;;;;;AAAA;;AAGA,IAAMA,YAAY;AAAA,2FAAG,iBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,IADe,GACRF,GAAG,CAACG,IAAJ,CAASD,IADD;AAEfE,YAAAA,SAFe,GAEHJ,GAAG,CAACK,MAAJ,CAAWC,EAFR;AAGfC,YAAAA,IAHe,GAGRP,GAAG,CAACO,IAHI;AAAA;AAAA,mBAKEC,6BAAiBC,gBAAjB,CAAkCP,IAAlC,EAAuCE,SAAvC,EAAiDG,IAAjD,CALF;;AAAA;AAKbG,YAAAA,MALa;AAAA,0BAOXA,MAPW;AAAA,4CAQZ,YARY,uBAWZ,oBAXY,wBAcZ,kBAdY,wBAiBZ,kBAjBY,wBAoBZ,SApBY,wBAuBZ,YAvBY,wBA0BZ,mBA1BY,wBA6BZ,WA7BY,wBAgCZ,IAhCY;AAAA;;AAAA;AASfT,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AATe;;AAAA;AAYfX,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AAZe;;AAAA;AAefX,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AAfe;;AAAA;AAkBfX,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AAlBe;;AAAA;AAqBfX,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AArBe;;AAAA;AAwBfX,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AAxBe;;AAAA;AA2BfX,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AA3Be;;AAAA;AA8BfX,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,KAAK,EAAE;AAAR,aAArB;AA9Be;;AAAA;AAiCfX,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACE,cAAAA,OAAO,EAAE;AAAV,aAArB;AAjCe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZd,YAAY;AAAA;AAAA;AAAA,GAAlB;;eAsCe;AACbA,EAAAA,YAAY,EAAZA;AADa,C","sourcesContent":["import UnitLevelService from \"../services/unit-level-service\";\n\n\nconst upgradeTroop = async (req,res) => {\n  let type = req.body.type;\n  let kingdomId = req.params.id;\n  let user = req.user;\n\n  const status = await UnitLevelService.upgradeUnitLevel(type,kingdomId,user);\n\n  switch (status) {\n    case \"wrong_type\":\n      res.status(400).json({error: \"One of the required fields missing!\"});\n      break;\n    case \"kingdom_not_exists\":\n      res.status(400).json({error: \"Kingdom does not exists!\"});\n      break;\n    case \"wrong_kingdom_id\":\n      res.status(403).json({error: \"You are not authorized, wrong kingdom ID\"});\n      break;\n    case \"wrong_troop_type\":\n      res.status(400).json({error: \"Wrong troop type inserted!\"});\n      break;\n    case \"no_gold\":\n      res.status(400).json({error: \"You have not enough gold!\"});\n      break;\n    case \"no_academy\":\n      res.status(400).json({error: \"You have no academy built!\"});\n      break;\n    case \"academy_destroyed\":\n      res.status(400).json({error: \"Your academy was destroyed. You can't upgrade troops!\"});\n      break;\n    case \"max_level\":\n      res.status(400).json({error: \"Already reached max level!\"});\n      break;\n    case \"ok\":\n      res.status(200).json({success: \"Troops are upgraded!\"});\n      break;\n  }\n}\n\nexport default {\n  upgradeTroop\n}"],"file":"unit-level-controller.js"}