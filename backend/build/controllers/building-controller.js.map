{"version":3,"sources":["../../src/controllers/building-controller.js"],"names":["getBuildingsByKingdomId","req","res","kingdomId","params","userId","user","id","BuildingService","getBuildings","response","idError","authenticationError","status","json","addBuildingToKingdom","type","body","inputError","resourceError","upgradeOrTeardownBuilding","buildingId","action","instant","buildingIdError","kingdomIdError"],"mappings":"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","sourcesContent":["import BuildingService from \"../services/building-service\";\n\n\nconst getBuildingsByKingdomId = async (req, res) => {\n    const kingdomId = req.params.kingdomId;\n    const userId = req.user.id;\n\n    const response = await BuildingService.getBuildings(kingdomId, userId);\n    const idError = response.idError;\n    const authenticationError = response.authenticationError;\n\n    if (idError) {\n        res.status(400).json(idError);\n    } else if (authenticationError) {\n        res.status(401).json(authenticationError);\n    } else {\n        res.status(200).json(response);\n    }\n}\n\nconst addBuildingToKingdom = async (req, res) => {\n    const kingdomId = req.params.kingdomId;\n    const type = req.body.type;\n    const userId = req.user.id;\n\n    const response = await BuildingService.addBuildingToKingdom(kingdomId, type, userId);\n\n    const idError = response.idError;\n    const inputError = response.inputError;\n    const resourceError = response.resourceError;\n    const authenticationError = response.authenticationError;\n\n    if (idError) {\n        res.status(400).json(idError);\n    } else if (inputError) {\n        res.status(400).json(inputError);\n    } else if (resourceError) {\n        res.status(400).json(resourceError);\n    } else if (authenticationError) {\n        res.status(401).json(authenticationError);\n    } else {\n        res.status(200).json(response);\n    }\n}\n\nconst upgradeOrTeardownBuilding = async (req, res) => {\n    const kingdomId = req.params.kingdomId;\n    const buildingId = req.params.buildingId;\n    const action = req.body.action;\n    const instant = req.body.instant;\n\n    const response = await BuildingService.upgradeOrTeardownBuilding(kingdomId, buildingId, action, instant);\n\n    const inputError = response.inputError;\n    const resourceError = response.resourceError;\n    const buildingIdError = response.buildingIdError;\n    const kingdomIdError = response.kingdomIdError;\n    const authenticationError = response.authenticationError;\n\n    if (buildingIdError) {\n        res.status(400).json(buildingIdError);\n    } else if (kingdomIdError) {\n        res.status(400).json(kingdomIdError);\n    } else if (inputError) {\n        res.status(400).json(inputError);\n    } else if (resourceError) {\n        res.status(400).json(resourceError);\n    } else if (authenticationError) {\n        res.status(401).json(authenticationError);\n    } else {\n        res.status(200).json(response);\n    }\n}\n\nexport default {\n    getBuildingsByKingdomId,\n    addBuildingToKingdom,\n    upgradeOrTeardownBuilding\n}"],"file":"building-controller.js"}