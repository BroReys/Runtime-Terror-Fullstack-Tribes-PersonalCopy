{"version":3,"sources":["../../src/controllers/map-controller.js"],"names":["postMap","req","res","body","coordinateX","coordinateY","MapService","identifyKingdom","response","error","status","json"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA,IAAMA,OAAO;AAAA,2FAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACuBD,GAAG,CAACE,IAD3B,EACLC,WADK,aACLA,WADK,EACQC,WADR,aACQA,WADR;AAAA;AAAA,mBAEWC,uBAAWC,eAAX,CAA2BH,WAA3B,EAAwCC,WAAxC,CAFX;;AAAA;AAENG,YAAAA,QAFM;;AAGZ,gBAAIA,QAAQ,CAACC,KAAb,EAAoB;AAChBP,cAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,QAArB;AACH,aAFD,MAEO;AACHN,cAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,QAArB;AACH;;AAPW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPR,OAAO;AAAA;AAAA;AAAA,GAAb;;eAUe;AACXA,EAAAA,OAAO,EAAPA;AADW,C","sourcesContent":["import MapService from \"../services/map-service\";\n\nconst postMap = async (req, res) => {\n    const {coordinateX, coordinateY} = req.body;\n    const response = await MapService.identifyKingdom(coordinateX, coordinateY);\n    if (response.error) {\n        res.status(400).json(response);\n    } else {\n        res.status(200).json(response);\n    }\n}\n\nexport default {\n    postMap\n}"],"file":"map-controller.js"}