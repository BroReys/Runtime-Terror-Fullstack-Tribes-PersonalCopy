{"version":3,"sources":["../../src/controllers/troops-controller.js"],"names":["create","req","res","type","body","quantity","kingdomId","params","id","user","TroopsInBarracksService","trainTroop","status","json","error","findKingdomTroopsInBarracks","kingdomTroopsInBarracks","showTroopArmies","token","TroopsService","listAllRecruitedKingdomTroops","TroopsRepository","findRecruitedKingdomTroops","recruitedKingdomTroops"],"mappings":"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","sourcesContent":["import TroopsInBarracksService\n  from \"../services/troops-services/troops-in-barracks-service\";\nimport TroopsService from \"../services/troops-services/troops-service\";\nimport TroopsRepository\n  from \"../repositories/troops-repositories/troops-repository\";\n\nconst create = async (req, res) => {\n  let type = req.body.type;\n  let quantity = req.body.quantity;\n  let kingdomId = req.params.id;\n  let user = req.user\n\n  const status = await TroopsInBarracksService\n  .trainTroop(type,quantity,kingdomId,user);\n\n  switch (status) {\n    case \"missing_field\":\n      res.status(400).json({error: \"One of the required fields missing!\"});\n      break;\n    case \"kingdom_not_exists\":\n      res.status(400).json({error: \"Kingdom does not exists!\"});\n      break;\n    case \"wrong_kingdom_id\":\n      res.status(403).json({error: \"You are not authorized, wrong kingdom ID\"});\n      break;\n    case \"no_gold\":\n      res.status(400).json({error: \"Not enough gold for this amount of troops!\"});\n      break;\n    case \"wrong_type\":\n      res.status(400).json({error: \"Wrong type of troop!\"});\n      break;\n    case \"settler_only_one\":\n      res.status(400).json({error: \"You can have only one group of settlers in game!\"});\n      break;\n    case \"already_built_settler\":\n      res.status(400).json({error: \"Settlers are already built!\"});\n      break;\n    case \"ok\":\n      const kingdomTroopsInBarracks = await TroopsInBarracksService\n      .findKingdomTroopsInBarracks(kingdomId)\n      res.status(200).json(kingdomTroopsInBarracks);\n      break;\n  }\n}\n\nconst showTroopArmies = async (req,res) => {\n  let kingdomId = req.params.id;\n  let token = req.user;\n\n  const status = await TroopsService\n  .listAllRecruitedKingdomTroops(kingdomId,token);\n\n  switch (status) {\n    case \"no_authorized\":\n      res.status(403).json({error: \"You are not authorized!\"});\n      break;\n    case \"kingdom_not_exists\":\n      res.status(400).json({error: \"Wrong kingdom ID\"});\n      break;\n    case \"ok\":\n      const recruitedKingdomTroops = await TroopsRepository\n      .findRecruitedKingdomTroops(kingdomId);\n      res.status(200).json(recruitedKingdomTroops);\n      break;\n  }\n}\n\nexport default {\n  create,\n  showTroopArmies\n}"],"file":"troops-controller.js"}