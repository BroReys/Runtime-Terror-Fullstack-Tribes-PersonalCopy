{"version":3,"sources":["../../src/controllers/leaderboard-controller.js"],"names":["getKingdomPoints","req","res","LeaderboardService","getLeaderboardsByKingdoms","status","error","leaderboard","json","getRulerPoints","getLeaderboardsByRulers"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,gBAAgB;AAAA,2FAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEoBC,+BAAmBC,yBAAnB,EAFpB;;AAAA;AAAA;AAEhBC,YAAAA,MAFgB,yBAEhBA,MAFgB;AAERC,YAAAA,KAFQ,yBAERA,KAFQ;AAEDC,YAAAA,WAFC,yBAEDA,WAFC;;AAAA,iBAInBD,KAJmB;AAAA;AAAA;AAAA;;AAAA,6CAKdJ,GAAG,CAACG,MAAJ,CAAWA,MAAX,EAAmBG,IAAnB,CAAwB,8BAAqBF,KAArB,CAAxB,CALc;;AAAA;AAAA,6CAOdJ,GAAG,CAACG,MAAJ,CAAWA,MAAX,EAAmBG,IAAnB,CAAwBD,WAAxB,CAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBP,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAWA,IAAMS,cAAc;AAAA,4FAAG,kBAAOR,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEsBC,+BAAmBO,uBAAnB,EAFtB;;AAAA;AAAA;AAEdL,YAAAA,MAFc,0BAEdA,MAFc;AAENC,YAAAA,KAFM,0BAENA,KAFM;AAECC,YAAAA,WAFD,0BAECA,WAFD;;AAAA,iBAIjBD,KAJiB;AAAA;AAAA;AAAA;;AAAA,8CAKZJ,GAAG,CAACG,MAAJ,CAAWA,MAAX,EAAmBG,IAAnB,CAAwB,8BAAqBF,KAArB,CAAxB,CALY;;AAAA;AAAA,8CAOZJ,GAAG,CAACG,MAAJ,CAAWA,MAAX,EAAmBG,IAAnB,CAAwBD,WAAxB,CAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdE,cAAc;AAAA;AAAA;AAAA,GAApB;;eAWe;AACbT,EAAAA,gBAAgB,EAAhBA,gBADa;AAEbS,EAAAA,cAAc,EAAdA;AAFa,C","sourcesContent":["import LeaderboardService from \"../services/leaderboard-service\";\nimport generateErrorMessage from \"../utilities/error-message\";\n\nconst getKingdomPoints = async (req, res) => {\n\n  const {status, error, leaderboard} = await LeaderboardService.getLeaderboardsByKingdoms();\n\n  if (error) {\n    return res.status(status).json(generateErrorMessage(error));\n  } else {\n    return res.status(status).json(leaderboard);\n  }\n};\n\nconst getRulerPoints = async (req,res) => {\n\n  const {status, error, leaderboard} = await LeaderboardService.getLeaderboardsByRulers();\n\n  if (error) {\n    return res.status(status).json(generateErrorMessage(error));\n  } else {\n    return res.status(status).json(leaderboard);\n  }\n};\n\nexport default {\n  getKingdomPoints,\n  getRulerPoints\n}"],"file":"leaderboard-controller.js"}